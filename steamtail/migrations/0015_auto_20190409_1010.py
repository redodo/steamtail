# Generated by Django 2.2 on 2019-04-09 08:10

from django.db import migrations, transaction


def invert_private_public(apps, schema_editor):
    with transaction.atomic():
        User = apps.get_model('steamtail', 'user')
        for user in User.objects.all():
            if user.is_public is not None:
                user.is_public = not user.is_public
                user.save()


class Migration(migrations.Migration):

    dependencies = [
        ('steamtail', '0014_remove_userapp_last_played'),
    ]

    operations = [
        migrations.RenameField(
            'user',
            'is_private',
            'is_public',
        ),
        migrations.RunPython(
            invert_private_public,
            invert_private_public,
        ),
    ]
